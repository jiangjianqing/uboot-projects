学习过程计划：
    ->入门，通过为jz2440移植uboot、kernel、rootfs，掌握了嵌入式linux基本移植过程【完成于2019.02.03,板已出】    
    ->通过为tiny4412移植uboot掌握了u-boot-spl 【完成于2019.02.23】
    为tq210v4移植uboot（参考板 4412 origen），为其建立spl工具链 ,kernel rootfs ,掌握nand+ecc、设备树、lcd移植 【当前目标】
    通过为米尔科技AM335x移植uboot，kernel 、rootfs 掌握设备树  
    tqimx6q移植uboot mmc配置功能，移植dnw，   kernel、rootfs，从tq210v4移植lcd驱动
    为NanoPC T3（6818y）移植uboot，掌握soc的clock 、dmc设置,掌握mmc和uboot高级命令
    
    
驱动学习目标：
    lcd移植（tq210v4 和 tqimx6q）
    i2c操作

最后准备保留的开发板：
    tqimx6q (车载，a9+emmc+ddr3,android)
    AM335x  (工业控制,a8+nand+ddr3，linux+qt)
    NanoPC T3 (放单位使用 a53+emmc+ddr3，linux+qt)




uboot 命令框架移植到fswing

tiny4412   2019.02.24
    ram不稳定，推测是dmc_init_exynos4.c关于dmc的配置不正确
    导致u-boot-spl  copy_uboot_to_ram 中自写的ram验证代码无法通过
    但是通过点灯确认u-boot-spl已经成功跳转到u-boot在ram的代码中。
    熟悉PLL clock diagram的阅读和配置生成    

tqimx6q
    加入emmc分区支持
    移植linux内核 ，考虑android5.1的支持，选择kernel 4.4
    移植qt
    驱动开发学习
    clock设置到1G，当前还没有。

tq210v4 下一步uboot的移植工作
    参考4412 origen板 ，项目中加入spl支持并在u-boot-spl中点灯成功

AM335x
    完成u-boot-spl移植，进入uboot命令行

NanoPC T3（6818）
    完成u-boot-spl移植，进入uboot命令行    

rootfs
    busybox 1.29.3 移植到2440并完成运行测试   [2019.1.21]
    移植wolfssl，替换openssl，减少体积
    裁剪不必要的内容，减少体积
    移植imx6q，完成验证

uboot

    申明CONFIG_MENU_SHOW，将韦东山的uboot menu 移植到最新的uboot中，形成自己的工具集
    开启uboot fdt功能，编写2440所有设备的设备树文件并验证，开发并形成自己的验证工具
    裁剪，尽可能提高启动速度

    nand flash是以块为单位操作的，所以各个分区的偏移地址、大小、结束地址必须遵循以128k为单位的规则，即都是0x20000的倍数

    重要：一定要让uboot将mtdparts信息通过bootargs传递给kernel，这样在kernel中就不需要再重复指定mtdparts表信息了。
    具体查看：https://www.cnblogs.com/ben-ben/articles/2754995.html

    yaffs2暂时不移植到uboot，因为不是uboot和linux官方支持
    uboot中的分区其实是对地址的别名管理

    2019.02.12  ： 
        1、kernel中加入dm9000网卡支持，用于nfs启动rootfs
        2、需要加入nand ecc，当前kernel无法从nand的rootfs启动
        
        *、需要将u-boot烧入nand，因为nor flash已经淘汰    [该部分在制作s5pv210的uboot时一并处理] 
        

driver移植
    jz2440 v3   [学习阶段]
        移植kernel 3.16最新版
        移植kernel 4.x最新版
    4412 [待定]
    imx6q       [实践阶段]
        移植kernel 3.16最新版
        移植kernel 4.x最新版
        移植最新的uboot和kernel，完成验证

从kernel中提取设备树解析部分，将其用于后续的应用程序的动态设备扩展


【2019目标】：尝试做内核开发兼职，learn to cash!!车联网应该是非常有前景的！
技术发展方向：性能优化！包括内存占用、内核裁剪、uboot裁剪





